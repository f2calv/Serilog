version: "3.8"

services:
  webapi:
    container_name: webapi
    build:
      context: .
      dockerfile: src/webapi/Dockerfile
    depends_on:
      - elasticsearch-svc
      - kibana
    #   #   - filebeat
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - DOTNET_RUNNING_IN_COMPOSE=${DOTNET_RUNNING_IN_COMPOSE}
  #   networks:
  #     - serilog
  #   #logging:
  #   #  driver: none #suppress all logging

  elasticsearch-svc:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.1
    container_name: elasticsearch-svc
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - /c/temp/_DockerCompose/elasticsearch/data:/usr/share/elasticsearch/data
      - /c/temp/_DockerCompose/elasticsearch/logs:/usr/share/elasticsearch/logs
    environment:
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    # networks:
    #   - serilog

  # logstash-src:
  #   container_name: logstash-svc
  #   image: docker.elastic.co/logstash/logstash:7.11.1
  #   ports:
  #     - 8080:8080
  #   # volumes:
  #   #   - /c/temp/_DockerCompose/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
  #   #   - /c/temp/_DockerCompose/logstash/pipeline:/usr/share/logstash/pipeline:ro
  #   environment:
  #     LS_JAVA_OPTS: "-Xmx256m -Xms256m"
  #   depends_on:
  #     - elasticsearch-svc
  #   # networks:
  #   #   - serilog

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.11.1
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch-svc
    environment:
      #- elasticsearch_URL=http://elasticsearch-svc:9200
      - SERVER_NAME=http://kibana:5601
      - elasticsearch_HOSTS=http://elasticsearch-svc:9200
    # networks:
    #   - serilog

  # #https://www.elastic.co/guide/en/beats/filebeat/current/running-on-docker.html
  # filebeat:
  #   image: docker.elastic.co/beats/filebeat:7.9.3
  #   container_name: filebeat
  #   depends_on:
  #     - elasticsearch
  #   user: root
  #   volumes:
  #     - /c/temp/_DockerCompose/filebeat/data:/usr/share/filebeat/data:rw
  #     #- /c/temp/_DockerCompose/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
  #     - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /var/lib/docker:/var/lib/docker:ro
  #   networks:
  #     - serilog
  #https://docs.microsoft.com/en-us/sql/linux/quickstart-install-connect-docker?view=sql-server-ver15&preserve-view=true&pivots=cs1-powershell
  #https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-docker-container-deployment
  #docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Pas.sword@12345" -p 1433:1433 --name mssql -h mssql --rm -it mcr.microsoft.com/mssql/server:2019-latest
  mssql-svc:
    #image: mcr.microsoft.com/mssql/server:2019-latest
    build:
      context: .
      dockerfile: src/mssql/Dockerfile
    container_name: mssql-svc
    restart: always
    ports:
      - 1433:1433
    volumes:
      - /c/temp/_DockerCompose/mssql/data/:/var/opt/mssql/data
      - /c/temp/_DockerCompose/mssql/data/:/var/opt/mssql/log
      - /c/temp/_DockerCompose/mssql/data/:/var/opt/mssql/secrets
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Pas.sword@12345
    # networks:
    #   - serilog

  seq-svc:
    image: datalust/seq
    container_name: seq-svc
    restart: always
    ports:
      - 5342:80 #web ui
      - 5341:5341 #ingestion
    volumes:
      - /c/temp/_DockerCompose/seq/data/:/data/
    environment:
      - ACCEPT_EULA=Y
      - BASE_URI=http://seq-svc:5342

  redis-svc:
    container_name: redis-svc
    image: redis:alpine
    ports:
      - 6379:6379
    volumes:
      #- ./_DockerCompose/redis:/data #fails with docker desktop 2.2 when running from inside users directory?
      - /mnt/c/temp/_DockerCompose/redis:/data
    entrypoint: redis-server --appendonly yes

  p3x:
    container_name: redisui
    image: patrikx3/p3x-redis-ui
    ports:
      - 7843:7843
    volumes:
      # here you can set your own /home/user/p3x-redis-ui-settings folder
      #- ./_DockerCompose/p3x-redis-ui-settings:/settings #fails with docker desktop 2.2 when running from inside users directory?
      - /mnt/c/temp/_DockerCompose/p3x-redis-ui-settings:/settings
    depends_on:
      - redis-svc

networks:
  serilog:
    driver: bridge
    #external: true
