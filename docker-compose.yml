version: "3.8"

services:
  consoleapp:
    container_name: consoleapp
    build:
      context: .
      dockerfile: src/ConsoleApp/Dockerfile
    # depends_on:
    #   - elasticsearch
    #   - kibana
    #   - filebeat
    networks:
      - elastic
    #logging:
    #  driver: none #suppress all logging

  # workerservice:
  #   container_name: workerservice
  #   build:
  #     context: .
  #     dockerfile: src/WorkerService/Dockerfile
  #   depends_on:
  #   - elasticsearch
  #   - kibana
  #   networks:
  #   - elastic

  # elasticsearch:
  #   container_name: elasticsearch
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
  #   ports:
  #     - 9200:9200
  #   volumes:
  #     - /c/temp/_DockerCompose/elasticsearch-data:/usr/share/elasticsearch/data
  #   environment:
  #     - xpack.watcher.enabled=false
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - discovery.type=single-node
  #   networks:
  #     - elastic

  # kibana:
  #   container_name: kibana
  #   image: docker.elastic.co/kibana/kibana:7.9.3
  #   ports:
  #     - 5601:5601
  #   depends_on:
  #     - elasticsearch
  #   environment:
  #     - ELASTICSEARCH_URL=http://localhost:9200
  #   networks:
  #     - elastic

  # #https://www.elastic.co/guide/en/beats/filebeat/current/running-on-docker.html
  # filebeat:
  #   image: docker.elastic.co/beats/filebeat:7.9.3
  #   container_name: filebeat
  #   depends_on:
  #     - elasticsearch
  #   user: root
  #   volumes:
  #     - /c/temp/_DockerCompose/filebeat/data:/usr/share/filebeat/data:rw
  #     #- /c/temp/_DockerCompose/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
  #     - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /var/lib/docker:/var/lib/docker:ro
  #   networks:
  #     - elastic

  #https://docs.microsoft.com/en-us/sql/linux/quickstart-install-connect-docker?view=sql-server-ver15&preserve-view=true&pivots=cs1-powershell
  #https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-docker-container-deployment
  #docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=Pas.sword@12345' -p 1433:1433 --name mssql -h mssql -d mcr.microsoft.com/mssql/server:2019-latest
  #docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=Pas.sword@12345" -p 1433:1433 --name mssql -h mssql --rm -it mcr.microsoft.com/mssql/server:2019-latest
  mssql:
    #image: mcr.microsoft.com/mssql/server:2019-latest
    build:
      context: .
      dockerfile: src/mssql/Dockerfile
    container_name: mssql
    restart: always
    ports:
      - 1433:1433
    volumes:
      - /c/temp/_DockerCompose/mssql/data/:/var/opt/mssql/data
      - /c/temp/_DockerCompose/mssql/data/:/var/opt/mssql/log
      - /c/temp/_DockerCompose/mssql/data/:/var/opt/mssql/secrets
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Pas.sword@12345

networks:
  elastic:
    driver: bridge

volumes:
  elasticsearch-data:
